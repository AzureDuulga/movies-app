import { IMovie, IMovies } from "@/util/interfaces";
import {
  Button,
  Container,
  IconButton,
  ImageList,
  ImageListItem,
  ImageListItemBar,
  Pagination,
  Typography,
} from "@mui/material";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";

type Props = {
  movies: IMovie[];
  pagination: any;
};

export default function Home({ movies, pagination }: Props) {
  const router = useRouter();
  return (
    <div className="bg-red-600 h-screen">
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container
        maxWidth="lg"
        className="pt-10 flex flex-col items-center bg-white h-screen"
      >
        <Typography fontFamily={"fantasy"} variant="h1" color={"red"}>
          Movies
        </Typography>
        <ImageList rowHeight={200} cols={5} gap={3}>
          {movies.map((movie) => (
            <Link className="text-orange-400" href={`movies/${movie._id}`}>
              <ImageListItem key={movie._id}>
                <Image
                  src={movie.poster || ""}
                  width={80}
                  height={100}
                  alt={(movie.title as string) || ""}
                  className="w-full h-full object-cover rounded-md"
                  loading="lazy"
                />
                <ImageListItemBar title={movie.title} subtitle={movie.type} />
              </ImageListItem>
            </Link>
          ))}
        </ImageList>
        <Pagination
          count={pagination.total}
          page={pagination.page}
          onChange={(e: any) => {
            router.replace(`?limit=20&page=${e.target.textContent}`);
          }}
          className="mt-5"
        />
      </Container>
    </div>
  );
}

export async function getServerSideProps(ctx: any) {
  const { page, limit } = ctx.query;
  const res = await fetch(
    `http://localhost:8000/movies?limit=${limit || 20}&page=${page || 1}`
  );
  const data = await res.json();

  return {
    props: { movies: data.movies, pagination: data.pagination },
  };
}
